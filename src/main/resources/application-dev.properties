spring.jpa.properties.hibernate.format_sql=true
# DataSource
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

## Docker change localhost: db
spring.datasource.url=jdbc:postgresql://localhost:5432/gerenciador-service
spring.datasource.username=postgres
spring.datasource.password=12345
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1

spring.hibernate.database=postgresql
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto=update
# Naming strategy
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.datasource.driverClassName=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)
# The SQL dialect makes Hibernate generate better SQL for the chosen database
#
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql
#spring.jpa.properties.hibernate.hbm2ddl.delimiter=;